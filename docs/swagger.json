{
    "swagger": "2.0",
    "info": {
        "description": "A Tag Service API in Golang using Gin Framework",
        "title": "Tag Service API",
        "contact": {},
        "version": "1.0.0"
    },
    "host": "localhost:8888",
    "basePath": "/api/v1",
    "paths": {
        "/tags": {
            "get": {
                "description": "Returns a list of tags",
                "produces": [
                    "application/json"
                ],
                "summary": "Get all tags",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Save tag in database",
                "produces": [
                    "application/json"
                ],
                "summary": "Create tag",
                "parameters": [
                    {
                        "description": "Create tag",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateTagRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/tags/{tagId}": {
            "get": {
                "description": "Returns a single tag when tagId maches id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a single tag by its id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Find tag by id",
                        "name": "tagId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update and save tag in database",
                "produces": [
                    "application/json"
                ],
                "summary": "Update tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Update tag by id",
                        "name": "tagId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update tag",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateTagRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete tag from database",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delete tag by id",
                        "name": "tagId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.CreateTagRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 5
                }
            }
        },
        "request.UpdateTagRequest": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 5
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "status": {
                    "type": "string"
                }
            }
        }
    }
}